<?xml version = "1.0"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.example.com/Club" xmlns="http://www.example.com/Club">
    <xs:element name="schema">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="beers">
                    <xs:complexType mixed="true">
                        <xs:sequence>
                            <xs:element name="beer" type="BeerType" minOccurs="1" maxOccurs="unbounded">
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="darkBeerIngridientsType">
        <xs:sequence>
            <xs:element name = "commonIngridient" type = "xs:positiveInteger"/>
            <xs:element name = "darkBeerIngridient" type = "xs:positiveInteger"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="lightBeerIngridientsType">
        <xs:sequence>
            <xs:element name = "commonIngridient" type = "xs:positiveInteger"/>
            <xs:element name = "lightBeerIngridient" type = "xs:positiveInteger"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="campBeerIngridientsType">
        <xs:sequence>
            <xs:element name = "commonIngridient" type = "xs:positiveInteger"/>
            <xs:element name = "campBeerIngridient" type = "xs:positiveInteger"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="aliveBeerIngridientsType">
        <xs:sequence>
            <xs:element name = "commonIngridient" type = "xs:positiveInteger"/>
            <xs:element name = "aliveBeerIngridient" type = "xs:positiveInteger"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SpillMethodType">
        <xs:sequence>
            <xs:element name = "capacity" type = "xs:positiveInteger"/>
            <xs:element name = "material" type = "xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CharsType">
        <xs:sequence>
            <xs:element name = "revolNumber" type = "xs:positiveInteger" minOccurs="0" maxOccurs="1" />
            <xs:element name = "transparency" type = "xs:positiveInteger"/>
            <xs:element name = "filtered" type = "xs:boolean"/>
            <xs:element name = "nutritionalValue" type = "xs:positiveInteger"/>
            <xs:element name = "spillMethod" type = "SpillMethodType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name = "BeerType">
        <xs:sequence>
            <xs:element name = "name">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="id" use="required" type="xs:ID"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element name = "type">
                <xs:complexType>
                    <xs:choice minOccurs="1" maxOccurs="1">
                        <xs:element name = "dark" type = "darkBeerIngridientsType"/>
                        <xs:element name = "light" type = "lightBeerIngridientsType"/>
                        <xs:element name = "camp" type = "campBeerIngridientsType"/>
                        <xs:element name = "alive" type = "aliveBeerIngridientsType"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name = "al" type = "xs:boolean"/>
            <xs:element name = "manufacturer" type = "xs:string"/>
            <xs:element name = "chars" type = "CharsType"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>